[
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Salary Slip", 
  "modified": "2018-11-04 03:58:35.861533", 
  "name": "Salary Slip-Client", 
  "script": "\n\n//bench execute payslip_app.payslip_app.get_mtd --kwargs \"{'employee':'EMP/0001'}\"\n frappe.ui.form.on('Salary Slip', {\n     validate: function (frm) {\n\n         frm.doc.ytd_earnings = [];\n         frm.doc.mtd_earnings = [];\n         frm.doc.ytd_deductions = [];\n         frm.doc.mtd_deductions = [];\n\n        if(frm.doc.employee) {\n\n            // console.log(frm.doc.employee);\n            // console.log(frm.doc.posting_date);\n\n            if(frm.doc.payroll_frequency!='Monthly') {\n                frappe.call({\n                    'method': 'payslip_app.payslip_app.get_mtd',\n                    'args': {\n                        'employee': frm.doc.employee,\n                        'posting_date': frm.doc.posting_date\n                    },\n                    'callback': function (res) {\n                        console.log(res);\n                        if (res.message) {\n\n\n                            frm.doc.mtd_earnings = [];\n\n\n                            for (var i = 0; i < res.message.length; i++) {\n                                var found = 0;\n                                var add_amount = 0;\n                                for (var j = 0; j < frm.doc.earnings.length; j++) {\n                                    // console.log(res.message[i].salary_component + \" == \" + frm.doc.earnings[j].salary_component);\n                                    if (res.message[i].salary_component == frm.doc.earnings[j].salary_component) {\n                                        found = 1;\n                                        console.log('found salary comp');\n                                        add_amount = res.message[i].amount;\n                                    }\n                                }\n\n                                console.log(res.message[i]);\n                                console.log(res.message[i].salary_component);\n                                var newrow = cur_frm.add_child(\"mtd_earnings\");\n                                newrow.salary_component = res.message[i].salary_component;\n                                newrow.amount = res.message[i].amount + add_amount;\n                                refresh_field(\"mtd_earnings\");\n                            }\n                        }\n                    }\n                });\n                frappe.call({\n                    'method': 'payslip_app.payslip_app.get_mtd',\n                    'args': {\n                        'employee': frm.doc.employee,\n                        'posting_date': frm.doc.posting_date,\n                        'earning_deduction': 'deductions'\n\n                    },\n                    'callback': function (res) {\n                        console.log(res);\n                        if (res.message) {\n\n                            frm.doc.mtd_deductions = [];\n\n                            for (var i = 0; i < res.message.length; i++) {\n\n\n                                var found = 0;\n                                var add_amount = 0;\n                                for (var j = 0; j < frm.doc.deductions.length; j++) {\n                                    // console.log(res.message[i].salary_component + \" == \" + frm.doc.earnings[j].salary_component);\n                                    if (res.message[i].salary_component == frm.doc.deductions[j].salary_component) {\n                                        found = 1;\n                                        console.log('found salary comp');\n                                        add_amount = res.message[i].amount;\n                                    }\n                                }\n\n\n                                var newrow = cur_frm.add_child(\"mtd_deductions\");\n                                newrow.salary_component = res.message[i].salary_component;\n                                newrow.amount = res.message[i].amount + add_amount;\n                                refresh_field(\"mtd_deductions\");\n                            }\n                        }\n                    }\n                });\n            }\n        }\n\n\n\n             if(frm.doc.employee) {\n                 if (frm.doc.payroll_frequency == 'Monthly') {\n                     frappe.call({\n                         'method': 'payslip_app.payslip_app.get_ytd',\n                         'args': {\n                             'employee': frm.doc.employee\n                         },\n                         'callback': function (res) {\n                             console.log(res);\n                             if (res.message) {\n\n\n                                 frm.doc.ytd_earnings = [];\n\n\n                                 for (var i = 0; i < res.message.length; i++) {\n                                     var found = 0;\n                                     var add_amount = 0;\n                                     for (var j = 0; j < frm.doc.earnings.length; j++) {\n                                         // console.log(res.message[i].salary_component + \" == \" + frm.doc.earnings[j].salary_component);\n                                         if (res.message[i].salary_component == frm.doc.earnings[j].salary_component) {\n                                             found = 1;\n                                             console.log('found salary comp');\n                                             add_amount = res.message[i].amount;\n                                         }\n                                     }\n\n                                     console.log(res.message[i]);\n                                     console.log(res.message[i].salary_component);\n                                     var newrow = cur_frm.add_child(\"ytd_earnings\");\n                                     newrow.salary_component = res.message[i].salary_component;\n                                     newrow.amount = res.message[i].amount + add_amount;\n                                     refresh_field(\"ytd_earnings\");\n                                 }\n                             }\n                         }\n                     });\n                     frappe.call({\n                         'method': 'payslip_app.payslip_app.get_ytd',\n                         'args': {\n                             'employee': frm.doc.employee,\n                             'earning_deduction': 'deductions'\n                         },\n                         'callback': function (res) {\n                             console.log(res);\n                             if (res.message) {\n\n                                 frm.doc.ytd_deductions = [];\n\n                                 for (var i = 0; i < res.message.length; i++) {\n\n\n                                     var found = 0;\n                                     var add_amount = 0;\n                                     for (var j = 0; j < frm.doc.deductions.length; j++) {\n                                         // console.log(res.message[i].salary_component + \" == \" + frm.doc.earnings[j].salary_component);\n                                         if (res.message[i].salary_component == frm.doc.deductions[j].salary_component) {\n                                             found = 1;\n                                             console.log('found salary comp');\n                                             add_amount = res.message[i].amount;\n                                         }\n                                     }\n\n\n                                     var newrow = cur_frm.add_child(\"ytd_deductions\");\n                                     newrow.salary_component = res.message[i].salary_component;\n                                     newrow.amount = res.message[i].amount + add_amount;\n                                     refresh_field(\"ytd_deductions\");\n                                 }\n                             }\n                         }\n                     });\n\n                 }\n             }\n\n     }\n });", 
  "script_type": "Client"
 }
]